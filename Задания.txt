Сделать зелья здоровья и опыта.
ExpirienceComponent.
Подбор зелий в инвентарь.
Использование зелья.
Слоты быстрого использования.

Сделать платформу на которую можно запрыгнуть через платформу снизу. Но нельзя провалиться.
Сделать компас который указывать на цель.
Сделать классическое оружие: Пистолет, Винтовка, Бензопила, Нож.
Добавить персонажу возможность подбора и выброса пушек, через StaticMeshComponent

Запросы

Синтаксис(. -> ::)
Понимание компилятора
процесс сборки проекта

Структура данных
Алгоритмы
Многопоточность
Паттерны проектирования
…

Основная структура UE проектов
Игровой фреймворк
Контроллер
Гейммод
Player State
Где и как это агрегируется и т.д.

Мультиплейер
Как реплицируется
Что реплицируется
Remote Procedure Call

классы - ссылочные типы данных
структура - значимы типы данных

указатель используем ->
значение мы использум . (копируем)

Композиция - объект состоит из подобъектов
Инкапсуляция -  размещение в одном компоненте данных и методов, которые с ними работают. В реализации большинства языков программирования (C++, C#, Java и другие) обеспечивается механизм сокрытия, позволяющий разграничивать доступ к различным частям компонента.

Репликация - "Копирование" с сервера на клиент
Могут быть свои для каждого уровня
Game Mode - "правила игры", в случае мультиплеера существует только на сервере.(Например подключение игроков).
GameState - Хранит состояние игры доступное всем игрокам(Начало раунда, Время раунда). Присутствует на клиента и на сервере.
PlayerState - Хранит состояние игрока, которая доступна другим клиентам. Присутствует и на сервере и на Всем клиентам реплицируется.
PlayerContorller - Существует на сервере и на клиенте владельца контроллера.

Один на всю игру. Не реплицируется, но существует.
GameInstanse - Класс игры "создается первым" - "умирает последним". Можно передавать данные между уровнями.

HUD - только на клиенте. Отображение UI.
DefaultPawnClass - Стартовая настройка по умолчанию.


class Base weapon - melee weapon 
	     	  - range weapon
Дописать перезарядку
выстрелы через SetCurrentAmmo;
Сделать "пистолет" с подбором и стрельбой вперед.
